#!/bin/sh
# tests with small sets
# perf tests should be done with variable set size
set -e
WORDS=/usr/share/dict/words
CC=cc

if [ -z "$CFLAGS" ]; then
    CFLAGS="-O2 -g -fno-strict-aliasing"
    MACHINE=$(uname -m)
    if [ _$MACHINE = _x86_64 ]
    then
        CFLAGS="$CFLAGS -march=native"
    fi
else
    case "$CFLAGS" in
        *-fsanitize=address*) ASAN=1; CFLAGS="$CFLAGS -DASAN" ;;
    esac
fi
if [ -z "$1" ]
then
    WORDSIN=_words1000
    RANDIN=_rand100
    [ -e ${WORDSIN} ] || head -n 1000 <${WORDS} >${WORDSIN}
    [ -e ${RANDIN} ] || seq 200 | random > ${RANDIN}
else
    echo Perf: $1
    PERF=-DPERF
    N=$(($1 * 2))
    WORDSIN=_words${1}
    RANDIN=_rand${N}
    head -n $1 <${WORDS} >${WORDSIN}
    seq $N | random > ${RANDIN}
fi

perf() {
    alg=$1
    hash=$2
    opts=$3
    map=
    mapopt=
    if [ x$alg = xbdz ]; then
        map="${WORDSIN}.map"
        mapopt="-m $map"
    fi
    # intkeys
    if [ x$opts = x-I -o x$opts = x-Ip -o x$opts = x-Ifp ]
    then
        if [ x$alg = xbdz ]
        then
            map="${RANDIN}.map"
            mapopt="-m $map"
        elif [ -z $alg ]
        then
             alg=chm
        fi
	echo ./nbperf $opts -a $alg -o _test_int$alg.c $mapopt ${RANDIN}
	time ./nbperf $opts -a $alg -o _test_int$alg.c $mapopt ${RANDIN}
	[ -z $PERF ] && echo $CC $CFLAGS -I. -D_INTKEYS -D$alg _test_int$alg.c test_main.c -o _test_int$alg
	$CC $CFLAGS -I. $PERF -D_INTKEYS -D$alg _test_int$alg.c test_main.c -o _test_int$alg
	echo ./_test_int$alg ${RANDIN}
        time ./_test_int$alg ${RANDIN}
    elif [ -z $hash ]
    then
	echo ./nbperf $opts -a $alg -o _test_${alg}.c $mapopt ${WORDSIN}
	time ./nbperf $opts -a $alg -o _test_${alg}.c $mapopt ${WORDSIN}
        [ -z $PERF ] && echo $CC $CFLAGS -I. -D$alg _test_${alg}.c test_main.c mi_vector_hash.c -o _test_${alg}
	$CC $CFLAGS -I. $PERF -D$alg _test_${alg}.c test_main.c mi_vector_hash.c -o _test_${alg}
        echo ./_test_${alg} ${WORDSIN}
        time ./_test_${alg} ${WORDSIN}
    else
	echo ./nbperf $opts -a $alg -h $hash -o _test_${alg}_${hash}.c $mapopt ${WORDSIN}
	time ./nbperf $opts -a $alg -h $hash -o _test_${alg}_${hash}.c $mapopt ${WORDSIN}
        [ -z $PERF ] && echo $CC $CFLAGS -I. -D$alg -Dh_$hash _test_${alg}_${hash}.c test_main.c -o _test_${alg}_${hash}
	$CC $CFLAGS -I. $PERF -D$alg -Dh_$hash _test_${alg}_${hash}.c test_main.c -o _test_${alg}_${hash}
        echo ./_test_${alg}_${hash} ${WORDSIN}
        time ./_test_${alg}_${hash} ${WORDSIN}
    fi
}

perf chm
perf chm3
perf bdz
perf chm wyhash
perf chm3 wyhash
perf bdz wyhash
perf chm fnv
perf chm fnv3
perf chm3 fnv3
perf bdz fnv3 -f
perf chm crc
perf chm crc -f
perf chm crc -fp
perf chm wyhash -f
perf chm3 wyhash -f
perf bdz wyhash -f
perf chm wyhash -fp
perf chm3 wyhash -fp
perf bdz wyhash -fp
perf chm wyhash -p
perf chm3 wyhash -p
perf bdz wyhash -p

perf chm "" -Ip
perf chm "" -I
perf chm "" -Ifp
perf chm3 "" -I
perf bdz "" -Ip
perf bdz "" -I
perf bdz "" -Ifp
